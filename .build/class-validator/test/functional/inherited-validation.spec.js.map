{
  "version": 3,
  "sources": ["../../../../class-validator/test/functional/inherited-validation.spec.ts"],
  "sourcesContent": ["import { Contains, MinLength } from '../../src/decorator/decorators';\nimport { Validator } from '../../src/validation/Validator';\n\nconst validator = new Validator();\n\ndescribe('inherited validation', () => {\n  it('should validate inherited properties', () => {\n    expect.assertions(9);\n\n    class MyClass {\n      @Contains('hello')\n      title: string;\n    }\n\n    class MySubClass extends MyClass {\n      @MinLength(5)\n      name: string;\n    }\n\n    const model = new MySubClass();\n    model.title = 'helo world';\n    model.name = 'my';\n    return validator.validate(model).then(errors => {\n      expect(errors.length).toEqual(2);\n      // subclass own props are validated first\n      expect(errors[0].target).toEqual(model);\n      expect(errors[0].property).toEqual('name');\n      expect(errors[0].constraints).toEqual({ minLength: 'name must be longer than or equal to 5 characters' });\n      expect(errors[0].value).toEqual('my');\n      // parent props are validated afterwards\n      expect(errors[1].target).toEqual(model);\n      expect(errors[1].property).toEqual('title');\n      expect(errors[1].constraints).toEqual({ contains: 'title must contain a hello string' });\n      expect(errors[1].value).toEqual('helo world');\n    });\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;AAAA,wBAAoC;AACpC,uBAA0B;AAE1B,MAAM,YAAY,IAAI,2BAAU;AAEhC,SAAS,wBAAwB,MAAM;AACrC,KAAG,wCAAwC,MAAM;AAC/C,WAAO,WAAW,CAAC;AAEnB,UAAM,QAAQ;AAAA,IAGd;AADE;AAAA,UADC,4BAAS,OAAO;AAAA,OADb,QAEJ;AAGF,UAAM,mBAAmB,QAAQ;AAAA,IAGjC;AADE;AAAA,UADC,6BAAU,CAAC;AAAA,OADR,WAEJ;AAGF,UAAM,QAAQ,IAAI,WAAW;AAC7B,UAAM,QAAQ;AACd,UAAM,OAAO;AACb,WAAO,UAAU,SAAS,KAAK,EAAE,KAAK,YAAU;AAC9C,aAAO,OAAO,MAAM,EAAE,QAAQ,CAAC;AAE/B,aAAO,OAAO,GAAG,MAAM,EAAE,QAAQ,KAAK;AACtC,aAAO,OAAO,GAAG,QAAQ,EAAE,QAAQ,MAAM;AACzC,aAAO,OAAO,GAAG,WAAW,EAAE,QAAQ,EAAE,WAAW,oDAAoD,CAAC;AACxG,aAAO,OAAO,GAAG,KAAK,EAAE,QAAQ,IAAI;AAEpC,aAAO,OAAO,GAAG,MAAM,EAAE,QAAQ,KAAK;AACtC,aAAO,OAAO,GAAG,QAAQ,EAAE,QAAQ,OAAO;AAC1C,aAAO,OAAO,GAAG,WAAW,EAAE,QAAQ,EAAE,UAAU,oCAAoC,CAAC;AACvF,aAAO,OAAO,GAAG,KAAK,EAAE,QAAQ,YAAY;AAAA,IAC9C,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
