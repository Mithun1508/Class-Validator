{
  "version": 3,
  "sources": ["../../../../class-validator/sample/sample2-using-groups/app.ts"],
  "sourcesContent": ["import { Validator } from '../../src/validation/Validator';\nimport { Post } from './Post';\n\nlet validator = new Validator();\n\nlet post1 = new Post();\npost1.title = 'Hello world'; // should pass\npost1.text = 'this is a great post about hello world'; // should pass\npost1.rating = 10; // should pass\npost1.email = 'info@google.com'; // should pass\npost1.site = 'google.com'; // should pass\npost1.createDate = new Date(); // should pass\n\nvalidator.validate(post1, { groups: ['users'] }).then(result => {\n  console.log('1.1. should pass: ', result);\n});\n\nvalidator.validate(post1, { groups: ['admins'] }).then(result => {\n  console.log('1.2. should pass: ', result);\n});\n\nlet post2 = new Post();\npost2.title = 'Hi!'; // should not pass for user or moderator, but should pass for admin\npost2.text = 'this is a great post about hello world'; // should pass\npost2.rating = 10; // should pass\npost2.email = 'info@google.com'; // should pass\npost2.site = 'google.com'; // should pass\npost2.createDate = new Date(); // should pass\n\nvalidator.validate(post2, { groups: ['users'] }).then(result => {\n  console.log('2.1. should not pass: ', result);\n});\n\nvalidator.validate(post2, { groups: ['moderators'] }).then(result => {\n  console.log('2.2. should not pass: ', result);\n});\n\nvalidator.validate(post2, { groups: ['admins'] }).then(result => {\n  console.log('2.3. should pass: ', result);\n});\n\nvalidator.validate(post2, { groups: ['users', 'admins'] }).then(result => {\n  console.log('2.4. should not pass: ', result);\n});\n\nlet post3 = new Post();\npost3.title = 'Hello world'; // should not pass for user or moderator, but should pass for admin\npost3.text = 'this is a great post about hello world'; // should pass\npost3.rating = 10; // should pass\npost3.email = 'info@google.com'; // should pass\npost3.site = 'google.com'; // should pass\n// note that we dont set date\n\nvalidator.validate(post3, { groups: ['users'] }).then(result => {\n  console.log('3.1. should pass: ', result);\n});\n\nvalidator.validate(post3).then(result => {\n  console.log('3.2. should not pass: ', result);\n});\n\nlet post4 = new Post();\npost4.title = 'Hello world'; // should not pass for user or moderator, but should pass for admin\npost4.text = 'this is a great post about hello world'; // should pass\npost4.rating = 10; // should pass\npost4.email = ''; // should not pass\npost4.site = 'google.com'; // should pass\n// note that we dont set date\n\nvalidator.validate(post4, { groups: ['users'] }).then(result => {\n  console.log('4.1. should not pass: ', result);\n});\n\nvalidator.validate(post4).then(result => {\n  console.log('4.2. should not pass: ', result);\n});\n"],
  "mappings": ";AAAA,uBAA0B;AAC1B,kBAAqB;AAErB,IAAI,YAAY,IAAI,2BAAU;AAE9B,IAAI,QAAQ,IAAI,iBAAK;AACrB,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,SAAS;AACf,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,aAAa,IAAI,KAAK;AAE5B,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,YAAU;AAC9D,UAAQ,IAAI,sBAAsB,MAAM;AAC1C,CAAC;AAED,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,YAAU;AAC/D,UAAQ,IAAI,sBAAsB,MAAM;AAC1C,CAAC;AAED,IAAI,QAAQ,IAAI,iBAAK;AACrB,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,SAAS;AACf,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,aAAa,IAAI,KAAK;AAE5B,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,YAAU;AAC9D,UAAQ,IAAI,0BAA0B,MAAM;AAC9C,CAAC;AAED,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,KAAK,YAAU;AACnE,UAAQ,IAAI,0BAA0B,MAAM;AAC9C,CAAC;AAED,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,YAAU;AAC/D,UAAQ,IAAI,sBAAsB,MAAM;AAC1C,CAAC;AAED,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,SAAS,QAAQ,EAAE,CAAC,EAAE,KAAK,YAAU;AACxE,UAAQ,IAAI,0BAA0B,MAAM;AAC9C,CAAC;AAED,IAAI,QAAQ,IAAI,iBAAK;AACrB,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,SAAS;AACf,MAAM,QAAQ;AACd,MAAM,OAAO;AAGb,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,YAAU;AAC9D,UAAQ,IAAI,sBAAsB,MAAM;AAC1C,CAAC;AAED,UAAU,SAAS,KAAK,EAAE,KAAK,YAAU;AACvC,UAAQ,IAAI,0BAA0B,MAAM;AAC9C,CAAC;AAED,IAAI,QAAQ,IAAI,iBAAK;AACrB,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,SAAS;AACf,MAAM,QAAQ;AACd,MAAM,OAAO;AAGb,UAAU,SAAS,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,YAAU;AAC9D,UAAQ,IAAI,0BAA0B,MAAM;AAC9C,CAAC;AAED,UAAU,SAAS,KAAK,EAAE,KAAK,YAAU;AACvC,UAAQ,IAAI,0BAA0B,MAAM;AAC9C,CAAC;",
  "names": []
}
