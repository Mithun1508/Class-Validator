{
  "version": 3,
  "sources": ["../../../../class-validator/src/validation/ValidationError.ts"],
  "sourcesContent": ["/**\n * Validation error description.\n */\nexport class ValidationError {\n  /**\n   * Object that was validated.\n   *\n   * OPTIONAL - configurable via the ValidatorOptions.validationError.target option\n   */\n  target?: object;\n\n  /**\n   * Object's property that haven't pass validation.\n   */\n  property: string;\n\n  /**\n   * Value that haven't pass a validation.\n   *\n   * OPTIONAL - configurable via the ValidatorOptions.validationError.value option\n   */\n  value?: any;\n\n  /**\n   * Constraints that failed validation with error messages.\n   */\n  constraints?: {\n    [type: string]: string;\n  };\n\n  /**\n   * Contains all nested validation errors of the property.\n   */\n  children?: ValidationError[];\n\n  /*\n   * A transient set of data passed through to the validation result for response mapping\n   */\n  contexts?: {\n    [type: string]: any;\n  };\n\n  /**\n   *\n   * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability\n   * @param hasParent true when the error is a child of an another one\n   * @param parentPath path as string to the parent of this property\n   */\n  toString(shouldDecorate: boolean = false, hasParent: boolean = false, parentPath: string = ``): string {\n    const boldStart = shouldDecorate ? `\\x1b[1m` : ``;\n    const boldEnd = shouldDecorate ? `\\x1b[22m` : ``;\n    const propConstraintFailed = (propertyName: string): string =>\n      ` - property ${boldStart}${parentPath}${propertyName}${boldEnd} has failed the following constraints: ${boldStart}${Object.keys(\n        this.constraints\n      ).join(`, `)}${boldEnd} \\n`;\n\n    if (!hasParent) {\n      return (\n        `An instance of ${boldStart}${\n          this.target ? this.target.constructor.name : 'an object'\n        }${boldEnd} has failed the validation:\\n` +\n        (this.constraints ? propConstraintFailed(this.property) : ``) +\n        (this.children\n          ? this.children.map(childError => childError.toString(shouldDecorate, true, this.property)).join(``)\n          : ``)\n      );\n    } else {\n      // we format numbers as array indexes for better readability.\n      const formattedProperty = Number.isInteger(+this.property)\n        ? `[${this.property}]`\n        : `${parentPath ? `.` : ``}${this.property}`;\n\n      if (this.constraints) {\n        return propConstraintFailed(formattedProperty);\n      } else {\n        return this.children\n          ? this.children\n              .map(childError => childError.toString(shouldDecorate, true, `${parentPath}${formattedProperty}`))\n              .join(``)\n          : ``;\n      }\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,MAAM,gBAAgB;AAAA,EA6C3B,SAAS,iBAA0B,OAAO,YAAqB,OAAO,aAAqB,IAAY;AACrG,UAAM,YAAY,iBAAiB,YAAY;AAC/C,UAAM,UAAU,iBAAiB,aAAa;AAC9C,UAAM,uBAAuB,CAAC,iBAC5B,eAAe,YAAY,aAAa,eAAe,iDAAiD,YAAY,OAAO;AAAA,MACzH,KAAK;AAAA,IACP,EAAE,KAAK,IAAI,IAAI;AAAA;AAEjB,QAAI,CAAC,WAAW;AACd,aACE,kBAAkB,YAChB,KAAK,SAAS,KAAK,OAAO,YAAY,OAAO,cAC5C;AAAA,KACF,KAAK,cAAc,qBAAqB,KAAK,QAAQ,IAAI,OACzD,KAAK,WACF,KAAK,SAAS,IAAI,gBAAc,WAAW,SAAS,gBAAgB,MAAM,KAAK,QAAQ,CAAC,EAAE,KAAK,EAAE,IACjG;AAAA,IAER,OAAO;AAEL,YAAM,oBAAoB,OAAO,UAAU,CAAC,KAAK,QAAQ,IACrD,IAAI,KAAK,cACT,GAAG,aAAa,MAAM,KAAK,KAAK;AAEpC,UAAI,KAAK,aAAa;AACpB,eAAO,qBAAqB,iBAAiB;AAAA,MAC/C,OAAO;AACL,eAAO,KAAK,WACR,KAAK,SACF,IAAI,gBAAc,WAAW,SAAS,gBAAgB,MAAM,GAAG,aAAa,mBAAmB,CAAC,EAChG,KAAK,EAAE,IACV;AAAA,MACN;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
