{
  "version": 3,
  "sources": ["../../../../class-validator/src/validation-schema/ValidationSchemaToMetadataTransformer.ts"],
  "sourcesContent": ["import { ValidationSchema } from './ValidationSchema';\nimport { ValidationMetadata } from '../metadata/ValidationMetadata';\nimport { ValidationMetadataArgs } from '../metadata/ValidationMetadataArgs';\nimport { ValidationOptions } from '../decorator/ValidationOptions';\n\n/**\n * Used to transform validation schemas to validation metadatas.\n */\nexport class ValidationSchemaToMetadataTransformer {\n  transform(schema: ValidationSchema): ValidationMetadata[] {\n    const metadatas: ValidationMetadata[] = [];\n    Object.keys(schema.properties).forEach(property => {\n      schema.properties[property].forEach(validation => {\n        const validationOptions: ValidationOptions = {\n          message: validation.message,\n          groups: validation.groups,\n          always: validation.always,\n          each: validation.each,\n        };\n        const args: ValidationMetadataArgs = {\n          type: validation.type,\n          target: schema.name,\n          propertyName: property,\n          constraints: validation.constraints,\n          validationTypeOptions: validation.options,\n          validationOptions: validationOptions,\n        };\n        metadatas.push(new ValidationMetadata(args));\n      });\n    });\n    return metadatas;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAAmC;AAO5B,MAAM,sCAAsC;AAAA,EACjD,UAAU,QAAgD;AACxD,UAAM,YAAkC,CAAC;AACzC,WAAO,KAAK,OAAO,UAAU,EAAE,QAAQ,cAAY;AACjD,aAAO,WAAW,UAAU,QAAQ,gBAAc;AAChD,cAAM,oBAAuC;AAAA,UAC3C,SAAS,WAAW;AAAA,UACpB,QAAQ,WAAW;AAAA,UACnB,QAAQ,WAAW;AAAA,UACnB,MAAM,WAAW;AAAA,QACnB;AACA,cAAM,OAA+B;AAAA,UACnC,MAAM,WAAW;AAAA,UACjB,QAAQ,OAAO;AAAA,UACf,cAAc;AAAA,UACd,aAAa,WAAW;AAAA,UACxB,uBAAuB,WAAW;AAAA,UAClC;AAAA,QACF;AACA,kBAAU,KAAK,IAAI,6CAAmB,IAAI,CAAC;AAAA,MAC7C,CAAC;AAAA,IACH,CAAC;AACD,WAAO;AAAA,EACT;AACF;",
  "names": []
}
