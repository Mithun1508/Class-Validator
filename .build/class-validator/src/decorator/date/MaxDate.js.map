{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/date/MaxDate.ts"],
  "sourcesContent": ["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MAX_DATE = 'maxDate';\n\n/**\n * Checks if the value is a date that's before the specified date.\n */\nexport function maxDate(date: unknown, maxDate: Date): boolean {\n  return date instanceof Date && date.getTime() <= maxDate.getTime();\n}\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MaxDate(date: Date, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MAX_DATE,\n      constraints: [date],\n      validator: {\n        validate: (value, args): boolean => maxDate(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => 'maximal allowed date for ' + eachPrefix + '$property is $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAAyC;AAElC,MAAM,WAAW;AAKjB,SAAS,QAAQ,MAAeA,UAAwB;AAC7D,SAAO,gBAAgB,QAAQ,KAAK,QAAQ,KAAKA,SAAQ,QAAQ;AACnE;AAKO,SAAS,QAAQ,MAAY,mBAA0D;AAC5F,aAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,aAAa,CAAC,IAAI;AAAA,MAClB,WAAW;AAAA,QACT,UAAU,CAAC,OAAO,SAAkB,QAAQ,OAAO,KAAK,YAAY,EAAE;AAAA,QACtE,oBAAgB;AAAA,UACd,gBAAc,8BAA8B,aAAa;AAAA,UACzD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF;",
  "names": ["maxDate"]
}
