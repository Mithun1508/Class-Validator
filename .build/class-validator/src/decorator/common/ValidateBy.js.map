{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/common/ValidateBy.ts"],
  "sourcesContent": ["import { ValidationOptions } from '../ValidationOptions';\nimport { registerDecorator } from '../../register-decorator';\nimport { ValidationArguments } from '../../validation/ValidationArguments';\nimport { ValidatorConstraintInterface } from '../../validation/ValidatorConstraintInterface';\n\nexport interface ValidateByOptions {\n  name: string;\n  constraints?: any[];\n  validator: ValidatorConstraintInterface | Function;\n  async?: boolean;\n}\n\nexport function buildMessage(\n  impl: (eachPrefix: string, args?: ValidationArguments) => string,\n  validationOptions?: ValidationOptions\n): (validationArguments?: ValidationArguments) => string {\n  return (validationArguments?: ValidationArguments): string => {\n    const eachPrefix = validationOptions && validationOptions.each ? 'each value in ' : '';\n    return impl(eachPrefix, validationArguments);\n  };\n}\n\nexport function ValidateBy(options: ValidateByOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      name: options.name,\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: options.constraints,\n      validator: options.validator,\n    });\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAAkC;AAW3B,SAAS,aACd,MACA,mBACuD;AACvD,SAAO,CAAC,wBAAsD;AAC5D,UAAM,aAAa,qBAAqB,kBAAkB,OAAO,mBAAmB;AACpF,WAAO,KAAK,YAAY,mBAAmB;AAAA,EAC7C;AACF;AAEO,SAAS,WAAW,SAA4B,mBAA0D;AAC/G,SAAO,SAAU,QAAgB,cAA4B;AAC3D,qDAAkB;AAAA,MAChB,MAAM,QAAQ;AAAA,MACd,QAAQ,OAAO;AAAA,MACf;AAAA,MACA,SAAS;AAAA,MACT,aAAa,QAAQ;AAAA,MACrB,WAAW,QAAQ;AAAA,IACrB,CAAC;AAAA,EACH;AACF;",
  "names": []
}
