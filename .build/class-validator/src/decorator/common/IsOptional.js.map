{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/common/IsOptional.ts"],
  "sourcesContent": ["import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\nexport function IsOptional(validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [\n        (object: any, value: any): boolean => {\n          return object[propertyName] !== null && object[propertyName] !== undefined;\n        },\n      ],\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,6BAAgC;AAChC,gCAAmC;AACnC,6BAAmC;AAK5B,SAAS,WAAW,mBAA0D;AACnF,SAAO,SAAU,QAAgB,cAA4B;AAC3D,UAAM,OAA+B;AAAA,MACnC,MAAM,uCAAgB;AAAA,MACtB,QAAQ,OAAO;AAAA,MACf;AAAA,MACA,aAAa;AAAA,QACX,CAACA,SAAa,UAAwB;AACpC,iBAAOA,QAAO,kBAAkB,QAAQA,QAAO,kBAAkB;AAAA,QACnE;AAAA,MACF;AAAA,MACA;AAAA,IACF;AACA,mDAAmB,EAAE,sBAAsB,IAAI,6CAAmB,IAAI,CAAC;AAAA,EACzE;AACF;",
  "names": ["object"]
}
