{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/array/ArrayUnique.ts"],
  "sourcesContent": ["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_UNIQUE = 'arrayUnique';\nexport type ArrayUniqueIdentifier<T = any> = (o: T) => any;\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayUnique(array: unknown[], identifier?: ArrayUniqueIdentifier): boolean {\n  if (!(array instanceof Array)) return false;\n\n  if (identifier) {\n    array = array.map(o => (o != null ? identifier(o) : o));\n  }\n\n  const uniqueItems = array.filter((a, b, c) => c.indexOf(a) === b);\n  return array.length === uniqueItems.length;\n}\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayUnique<T = any>(\n  identifierOrOptions?: ArrayUniqueIdentifier<T> | ValidationOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  const identifier = typeof identifierOrOptions === 'function' ? identifierOrOptions : undefined;\n  const options = typeof identifierOrOptions !== 'function' ? identifierOrOptions : validationOptions;\n\n  return ValidateBy(\n    {\n      name: ARRAY_UNIQUE,\n      validator: {\n        validate: (value, args): boolean => arrayUnique(value, identifier),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + \"All $property's elements must be unique\", options),\n      },\n    },\n    options\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAAyC;AAElC,MAAM,eAAe;AAOrB,SAAS,YAAY,OAAkB,YAA6C;AACzF,MAAI,EAAE,iBAAiB;AAAQ,WAAO;AAEtC,MAAI,YAAY;AACd,YAAQ,MAAM,IAAI,OAAM,KAAK,OAAO,WAAW,CAAC,IAAI,CAAE;AAAA,EACxD;AAEA,QAAM,cAAc,MAAM,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;AAChE,SAAO,MAAM,WAAW,YAAY;AACtC;AAMO,SAAS,YACd,qBACA,mBACmB;AACnB,QAAM,aAAa,OAAO,wBAAwB,aAAa,sBAAsB;AACrF,QAAM,UAAU,OAAO,wBAAwB,aAAa,sBAAsB;AAElF,aAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,WAAW;AAAA,QACT,UAAU,CAAC,OAAO,SAAkB,YAAY,OAAO,UAAU;AAAA,QACjE,oBAAgB,gCAAa,gBAAc,aAAa,2CAA2C,OAAO;AAAA,MAC5G;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF;",
  "names": []
}
