{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/array/ArrayContains.ts"],
  "sourcesContent": ["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_CONTAINS = 'arrayContains';\n\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayContains(array: unknown, values: any[]): boolean {\n  if (!(array instanceof Array)) return false;\n\n  return values.every(value => array.indexOf(value) !== -1);\n}\n\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayContains(values: any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_CONTAINS,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => arrayContains(value, args.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain $constraint1 values',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAAyC;AAElC,MAAM,iBAAiB;AAMvB,SAAS,cAAc,OAAgB,QAAwB;AACpE,MAAI,EAAE,iBAAiB;AAAQ,WAAO;AAEtC,SAAO,OAAO,MAAM,WAAS,MAAM,QAAQ,KAAK,MAAM,EAAE;AAC1D;AAMO,SAAS,cAAc,QAAe,mBAA0D;AACrG,aAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,aAAa,CAAC,MAAM;AAAA,MACpB,WAAW;AAAA,QACT,UAAU,CAAC,OAAO,SAAkB,cAAc,OAAO,KAAK,YAAY,EAAE;AAAA,QAC5E,oBAAgB;AAAA,UACd,gBAAc,aAAa;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF;",
  "names": []
}
