{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/string/IsMacAddress.ts"],
  "sourcesContent": ["import { ValidationOptions, isValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMacAddressValidator from 'validator/lib/isMACAddress';\nimport ValidatorJS from 'validator';\n\nexport const IS_MAC_ADDRESS = 'isMacAddress';\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function isMACAddress(value: unknown, options?: ValidatorJS.IsMACAddressOptions): boolean {\n  return typeof value === 'string' && isMacAddressValidator(value, options);\n}\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function IsMACAddress(\n  optionsArg?: ValidatorJS.IsMACAddressOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator;\nexport function IsMACAddress(validationOptionsArg?: ValidationOptions): PropertyDecorator;\nexport function IsMACAddress(\n  optionsOrValidationOptionsArg?: ValidatorJS.IsMACAddressOptions | ValidationOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator {\n  const options = !isValidationOptions(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : undefined;\n  const validationOptions = isValidationOptions(optionsOrValidationOptionsArg)\n    ? optionsOrValidationOptionsArg\n    : validationOptionsArg;\n\n  return ValidateBy(\n    {\n      name: IS_MAC_ADDRESS,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isMACAddress(value, options),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a MAC Address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuD;AACvD,wBAAyC;AACzC,0BAAkC;AAG3B,MAAM,iBAAiB;AAMvB,SAAS,aAAa,OAAgB,SAAoD;AAC/F,SAAO,OAAO,UAAU,gBAAY,oBAAAA,SAAsB,OAAO,OAAO;AAC1E;AAWO,SAAS,aACd,+BACA,sBACmB;AACnB,QAAM,UAAU,KAAC,8CAAoB,6BAA6B,IAAI,gCAAgC;AACtG,QAAM,wBAAoB,8CAAoB,6BAA6B,IACvE,gCACA;AAEJ,aAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,aAAa,CAAC,OAAO;AAAA,MACrB,WAAW;AAAA,QACT,UAAU,CAAC,OAAO,SAAkB,aAAa,OAAO,OAAO;AAAA,QAC/D,oBAAgB,gCAAa,gBAAc,aAAa,mCAAmC,iBAAiB;AAAA,MAC9G;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF;",
  "names": ["isMacAddressValidator"]
}
