{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/string/IsMongoId.ts"],
  "sourcesContent": ["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMongoIdValidator from 'validator/lib/isMongoId';\n\nexport const IS_MONGO_ID = 'isMongoId';\n\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function isMongoId(value: unknown): boolean {\n  return typeof value === 'string' && isMongoIdValidator(value);\n}\n\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function IsMongoId(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MONGO_ID,\n      validator: {\n        validate: (value, args): boolean => isMongoId(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a mongodb id', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAAyC;AACzC,uBAA+B;AAExB,MAAM,cAAc;AAMpB,SAAS,UAAU,OAAyB;AACjD,SAAO,OAAO,UAAU,gBAAY,iBAAAA,SAAmB,KAAK;AAC9D;AAMO,SAAS,UAAU,mBAA0D;AAClF,aAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,WAAW;AAAA,QACT,UAAU,CAAC,OAAO,SAAkB,UAAU,KAAK;AAAA,QACnD,oBAAgB,gCAAa,gBAAc,aAAa,kCAAkC,iBAAiB;AAAA,MAC7G;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF;",
  "names": ["isMongoIdValidator"]
}
