{
  "version": 3,
  "sources": ["../../../../../class-validator/src/decorator/string/IsISSN.ts"],
  "sourcesContent": ["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISSNValidator from 'validator/lib/isISSN';\nimport ValidatorJS from 'validator';\n\nexport const IS_ISSN = 'isISSN';\n\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function isISSN(value: unknown, options?: ValidatorJS.IsISSNOptions): boolean {\n  return typeof value === 'string' && isISSNValidator(value, options);\n}\n\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function IsISSN(options?: ValidatorJS.IsISSNOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISSN,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isISSN(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a ISSN', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAAyC;AACzC,oBAA4B;AAGrB,MAAM,UAAU;AAMhB,SAAS,OAAO,OAAgB,SAA8C;AACnF,SAAO,OAAO,UAAU,gBAAY,cAAAA,SAAgB,OAAO,OAAO;AACpE;AAMO,SAAS,OAAO,SAAqC,mBAA0D;AACpH,aAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,aAAa,CAAC,OAAO;AAAA,MACrB,WAAW;AAAA,QACT,UAAU,CAAC,OAAO,SAAkB,OAAO,OAAO,KAAK,YAAY,EAAE;AAAA,QACrE,oBAAgB,gCAAa,gBAAc,aAAa,4BAA4B,iBAAiB;AAAA,MACvG;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF;",
  "names": ["isISSNValidator"]
}
